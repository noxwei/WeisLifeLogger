@page
@model SearchModel
@{
    ViewData["Title"] = "Search";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="display-6 text-primary">
                <i class="fas fa-search"></i> Search Life Entries
            </h1>
            <p class="lead text-muted">Find specific entries, locations, activities, and patterns</p>
        </div>
    </div>

    <!-- Search Form -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-6">
                            <label for="query" class="form-label">Search Query</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="query" name="query" 
                                       value="@Model.Query" placeholder="Search entries, locations, activities..."
                                       autofocus>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                            <div class="form-text">
                                Search across all entries, locations, activities, and other data fields
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label for="dateFrom" class="form-label">From Date</label>
                            <input type="date" class="form-control" id="dateFrom" name="dateFrom" value="@Model.DateFrom">
                        </div>
                        <div class="col-md-3">
                            <label for="dateTo" class="form-label">To Date</label>
                            <input type="date" class="form-control" id="dateTo" name="dateTo" value="@Model.DateTo">
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Search Suggestions -->
    @if (string.IsNullOrWhiteSpace(Model.Query))
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-lightbulb"></i> Quick Search Suggestions</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <h6>Popular Locations</h6>
                                @foreach (var location in Model.PopularLocations.Take(5))
                                {
                                    <a href="?query=@Uri.EscapeDataString(location)" class="badge bg-light text-dark me-2 mb-2 text-decoration-none">
                                        <i class="fas fa-map-marker-alt"></i> @location
                                    </a>
                                }
                            </div>
                            <div class="col-md-4">
                                <h6>Common Activities</h6>
                                @foreach (var action in Model.CommonActions.Take(5))
                                {
                                    <a href="?query=@Uri.EscapeDataString(action)" class="badge bg-info me-2 mb-2 text-decoration-none">
                                        @action
                                    </a>
                                }
                            </div>
                            <div class="col-md-4">
                                <h6>Search Examples</h6>
                                <a href="?query=driving" class="badge bg-secondary me-2 mb-2 text-decoration-none">driving</a>
                                <a href="?query=home" class="badge bg-secondary me-2 mb-2 text-decoration-none">home</a>
                                <a href="?query=work" class="badge bg-secondary me-2 mb-2 text-decoration-none">work</a>
                                <a href="?query=exercise" class="badge bg-secondary me-2 mb-2 text-decoration-none">exercise</a>
                                <a href="?query=meeting" class="badge bg-secondary me-2 mb-2 text-decoration-none">meeting</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Search Results -->
    @if (!string.IsNullOrWhiteSpace(Model.Query))
    {
        <div class="row mb-3">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5>Search Results for "@Model.Query"</h5>
                        <span class="text-muted">Found @Model.Results.Count() matching entries</span>
                    </div>
                    @if (Model.Results.Any())
                    {
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="exportResults()">
                                <i class="fas fa-download"></i> Export
                            </button>
                            <a href="/Search" class="btn btn-outline-secondary btn-sm">
                                <i class="fas fa-times"></i> Clear
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        @if (Model.Results.Any())
                        {
                            <!-- Results Summary -->
                            <div class="row mb-4">
                                <div class="col-md-3">
                                    <div class="text-center">
                                        <div class="text-primary fs-5">@Model.Results.Count()</div>
                                        <small class="text-muted">Total Matches</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="text-center">
                                        <div class="text-success fs-5">@Model.Results.Select(r => r.Date).Distinct().Count()</div>
                                        <small class="text-muted">Unique Days</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="text-center">
                                        <div class="text-info fs-5">@Model.Results.Where(r => !string.IsNullOrEmpty(r.Location)).Select(r => r.Location).Distinct().Count()</div>
                                        <small class="text-muted">Unique Locations</small>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="text-center">
                                        <div class="text-warning fs-5">@(Model.Results.Where(r => r.Steps.HasValue).Sum(r => r.Steps ?? 0).ToString("N0"))</div>
                                        <small class="text-muted">Total Steps</small>
                                    </div>
                                </div>
                            </div>

                            <hr>

                            <!-- Search Results List -->
                            <div class="search-results">
                                @foreach (var entry in Model.Results.OrderByDescending(e => e.DateTime))
                                {
                                    <div class="search-result-item mb-4 p-3 border rounded">
                                        <div class="row">
                                            <div class="col-md-2">
                                                <div class="text-primary fw-bold">@entry.Date</div>
                                                <div class="text-muted">@entry.Time</div>
                                                @if (!string.IsNullOrEmpty(entry.Location))
                                                {
                                                    <div class="mt-1">
                                                        <span class="badge bg-light text-dark">
                                                            <i class="fas fa-map-marker-alt"></i> @entry.Location
                                                        </span>
                                                    </div>
                                                }
                                            </div>
                                            <div class="col-md-7">
                                                <div class="entry-content">
                                                    @Html.Raw(HighlightSearchTerm(entry.Entry, Model.Query))
                                                </div>
                                                
                                                <div class="mt-2">
                                                    @if (!string.IsNullOrEmpty(entry.Action))
                                                    {
                                                        <span class="badge bg-info me-2">@entry.Action</span>
                                                    }
                                                    @if (!string.IsNullOrEmpty(entry.Weather))
                                                    {
                                                        <span class="badge bg-secondary me-2">
                                                            <i class="fas fa-cloud"></i> @entry.Weather
                                                        </span>
                                                    }
                                                    @if (!string.IsNullOrEmpty(entry.Device))
                                                    {
                                                        <span class="badge bg-dark me-2">
                                                            <i class="fas fa-mobile-alt"></i> @entry.Device
                                                        </span>
                                                    }
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                @if (entry.Steps.HasValue || entry.Hrv.HasValue || entry.DeviceBattery.HasValue)
                                                {
                                                    <div class="health-data">
                                                        @if (entry.Steps.HasValue)
                                                        {
                                                            <div><i class="fas fa-walking text-success"></i> @entry.Steps.Value.ToString("N0") steps</div>
                                                        }
                                                        @if (entry.Hrv.HasValue)
                                                        {
                                                            <div><i class="fas fa-heartbeat text-danger"></i> @entry.Hrv.Value HRV</div>
                                                        }
                                                        @if (entry.DeviceBattery.HasValue)
                                                        {
                                                            <div><i class="fas fa-battery-half text-warning"></i> @entry.DeviceBattery.Value%</div>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-5">
                                <i class="fas fa-search-minus fa-3x text-muted mb-3"></i>
                                <h5 class="text-muted">No Results Found</h5>
                                <p class="text-muted">
                                    No entries match your search criteria for "@Model.Query".
                                    <br>Try different keywords or check your spelling.
                                </p>
                                <a href="/Search" class="btn btn-outline-primary">
                                    <i class="fas fa-redo"></i> Try Another Search
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
.search-result-item {
    transition: all 0.2s ease;
    background-color: #f8f9fa;
}

.search-result-item:hover {
    background-color: #e9ecef;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.entry-content {
    line-height: 1.6;
}

.highlight {
    background-color: #fff3cd;
    font-weight: bold;
    padding: 2px 4px;
    border-radius: 3px;
}

.health-data {
    font-size: 0.9rem;
}
</style>

<script>
function exportResults() {
    // Simple CSV export functionality
    const results = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Results.Select(r => new { 
        Date = r.Date, 
        Time = r.Time, 
        Entry = r.Entry, 
        Location = r.Location, 
        Action = r.Action,
        Steps = r.Steps,
        Weather = r.Weather
    })));
    
    let csv = 'Date,Time,Entry,Location,Action,Steps,Weather\n';
    results.forEach(r => {
        csv += `"${r.Date}","${r.Time}","${r.Entry?.replace(/"/g, '""') || ''}","${r.Location || ''}","${r.Action || ''}","${r.Steps || ''}","${r.Weather || '"}"\n`;
    });
    
    const blob = new Blob([csv], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `search-results-${new Date().toISOString().split('T')[0]}.csv`;
    a.click();
    window.URL.revokeObjectURL(url);
}
</script>

@functions {
    private string HighlightSearchTerm(string text, string searchTerm)
    {
        if (string.IsNullOrWhiteSpace(searchTerm) || string.IsNullOrWhiteSpace(text))
            return text;
        
        var regex = new System.Text.RegularExpressions.Regex(
            System.Text.RegularExpressions.Regex.Escape(searchTerm), 
            System.Text.RegularExpressions.RegexOptions.IgnoreCase);
        
        return regex.Replace(text, match => $"<span class=\"highlight\">{match.Value}</span>");
    }
}